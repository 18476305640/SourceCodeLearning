1、什么是AOP
（1）面向切面编程（方面），利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。
（2）通俗描述：不通过修改源代码方式，在主干功能里面添加新功能

2、原理
 使用的是动态代理
（1）JDK代理：有继承接口时
（2）cglib代理：没有继承接口，是独立的一个类时

3、AOP的术语
（1）连接点：类里面哪些方法可以被增强，这些方法称为连接点
（2）切入点：实际被真正增强的方法，称为切入点
（3）通知（增强/切入内容）：
    *前置通知
    *后置通知
    *环绕通知
    *异常通知
    *最终通知
（4）切面（动作）：把通知应用到切入点过程

4、切入点表达式
    （1）切入点表达式作用：知道对哪个类里面的哪个方法进行增强
    （2）语法结构： execution([权限修饰符] [返回类型] [类全路径] [方法名称]([参数列表]) )
            举例1：对com.atguigu.dao.BookDao类里面的add进行增强
            execution(* com.atguigu.dao.BookDao.add(..))

            举例2：对com.atguigu.dao.BookDao类里面的所有的方法进行增强
            execution(* com.atguigu.dao.BookDao.* (..))

            举例3：对com.atguigu.dao包里面所有类，类里面所有方法进行增强
            execution(* com.atguigu.dao.*.* (..))


